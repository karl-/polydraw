## PolyDraw Documentation
## Version 1.3

# Quick Start

To use in a scene, follow these quick steps:
	0. Set camera to Orthographic mode (PolyDraw could be modified to work with a perspective camera, but currently is not set up to allow this)
	1. Attach the Draw.cs script to a GameObject.
	2. (Optional) Adjust the settings and draw methods to your liking
	3. Press 'Play'
	4. Click in the Game View and begin drawing polygons!


# Contents

0. Draw Method
	a. Continuous
		0. Sample Rate
	b. Continuous Closing Distance
		0. Sample Rate
		1. Closing Distance
	c. Point Max Vertices
		0. Max Vertices
	d. Point Closing Distance
		0. Closing Distance

1. Drawing Settings
	a. Draw Preview Mesh
	b. Trail Renderer Width
	c. Use Distance Check
		- Max Distance from Origin

2. Mesh Settings
	a. Generate Sides
	b. Material
	c. UV Scale
	d. Apply Tag
		0. Tag
	e. Max Meshes Allowed
	f. Collision
		0. Mesh Collider
			0. Force Convex
		1. Box Collider
		2. None

	g. Apply RigidBody
			1. Use Gravity
			2. Is Kinematic
			3. Apply Rigidbody
			4. Area Relative Mass
				- Mass Modifier	
				- Mass
	h. Mesh Name

3. Other
	a. IgnoreRect(Rect rect)
	b. ClearIgnoreRects()
	c. ExportOBJ()

0.a Continuous
	While the mouse is held down points will continue to be added to the mesh.  Once the mouse is let up, the mesh will close itself and attempt to triagulate.  If there are intersecting edges, the mesh will not be finalized.

		0. Sample Rate
			How many points per second should be added to the mesh.  A low value means more points per second.


0.b Continuous Closing Distance
	While the mouse is held down points will continue to be added to the mesh.  The mesh will be finalized once either of the following conditions is met:
		- Mouse is let up.
		- A point is drawn within the closing distance of the origin point.  (See 0.a.1 Closing Distance)
		
		0. Sample Rate
			How many points per second should be added to the mesh.  A low value means more points per second.

		1. Closing Distance
			Once a point is drawn within this distance of the origin point, the mesh will finalize and attempt to triangulate.

0.c Point Max Vertices
	Clicking adds a single point to the mesh.  The mesh will be finalized once the maximum amount of vertices is reached.

	0. Max Vertices
		The maximum amount of vertices to add to the mesh.  Once the user places the maximum amount of vertices, the mesh finalizes itself.

o.d Point Closing Distance
	Clicking adds a single point to the mesh.  The mesh will be finalized once the user places a point within the Closing Distance (0.d.0).

		0. Closing Distance
			Once a point is drawn within this distance of the origin point, the mesh will finalize and attempt to triangulate.

1. Drawing Settings
	A collection of variables pertaining to how the mesh behaves while it is being drawn.

		a. Draw Preview Mesh
			If toggled, a mesh will be drawn while the user is placing points.

		b. Trail Renderer Width
			The width of the trail renderer (the green line that outlines the edges of the mesh while it is being drawn).

		c. Use Distance Check
			If toggled, the mesh will only be drawn if the final point is within the Max Distance from Origin (1.c.-) setting.  If the final point is outside of this distance, no mesh will be drawn.
			- Max Distance from Origin
				The maximum allowed distance that the final user placed point may be from the origin point in order for the mesh to be drawn.


2. Mesh Settings
	A collection of settings that determine how the final mesh will be created.

	a. Generate Sides
		If toggled, a side mesh will be generated in addition to the 2d plane drawn.  If left untoggled, only the 2d mesh is drawn.

	b. Material
		The material to apply to the final mesh.

	c. UV Scale
		The X and Y scaling of the UV coordinates.

	d. Apply Tag
		If toggled, a user specified tag will be applied to the final mesh.

			0. Tag
				The tag to be applied.  Make sure that you have created the tag before applying!

	e. Max Meshes Allowed
		THe maximum number of meshes allowed to be drawn on screen at any one time.  PolyDraw keeps track internally of the meshes it has created, so for example if you draw 3 meshes and you have set a maximum of 3 Meshes Allowed, your fourth mesh (on successful completion) will be drawn and the first mesh drawn will be destroyed.

	f. Collision
		If Mesh Collider or Box Collider is selected, a collider will be assigned to the mesh.  If set to None, no collider will be applied.
		
		0. Mesh Collider
			A mesh collider will be applied.
	
			0. Force Convex
				If toggled, the resulting mesh will be assigned a Convex mesh collider regardless of it's Convexity.

		1. Box Collider
			A series of thin box colliders will be built around the edges of the mesh.  This guarantees that Concave meshes will respect all collisions regardless of Convexity.  This is slightly more prone to "snag" itself on objects however, and is best used on geometry that will not be moved.

		2. None

	g. Apply Rigidbody

		0. Use Gravity
			If toggled, the mesh will be affected by gravity.

		1. Is Kinematic
			If toggled, (and ApplyRigidbody is toggled) the rigidbody will be Kinematic.

		2. Apply Rigidbody
			If toggled, a rigidbody will be applied to the final mesh.

		3. Area Relative Mass
			If toggled, the mass of the rigidbody will be determined using the area of the polygon.  You may set a modifier for this using Mass Modifer (2.f.-)

			- Mass Modifier	
				The value to multipy the total area by to determine mass.

			- Mass
				If Area Relative Mass is not toggled, this value will be applied to the rigidbody's mass.

	h. Mesh Name
		The name to be applied to the final gameobject.

3. Other
	a. IgnoreRect(Rect rect)
		Call this to add a rect (in screen space!) to the ignore list.  For instance, if your GUI is in the top left, and you don't want the user to be able to draw meshes in this area, add a rect containing the GUI area to the ignore list.

	b. ClearIgnoreRects()
		Call this to clear the ignore list.

	c. ExportOBJ()
		Note- Meshes with the same name will not be overwritten, but an integer will appended.  You may need to refresh your asset library to view exported meshes (Ctrl-r or Cmd-R on Mac).  Path is absolute, or relative if in Editor.  Check the Demo.cs script for an example of both standalone and in editor usage.  All overloads return the path of the last exported object.

		ExportOBJ(string path)
			- Export all generated meshes.

		ExportOBJ(string path, int index)
			- Export mesh at index of generated meshes

		ExportOBJ(string path, GameObject go)
			- Export mesh attached to gameobject.

		ExportCurrent(string path)
			- Export the last mesh drawn.